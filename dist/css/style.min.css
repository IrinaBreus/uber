*{margin:0;padding:0;box-sizing:border-box;font-family:"Roboto",sans-serif;font-style:normal}.container{max-width:1140px;margin:0 auto}.btn{display:block;margin:0 auto;width:172px;height:46px;background:linear-gradient(0deg,#1eacc7 0,#4ce2ff 100%);border-radius:4px;font-weight:400;font-size:14px;text-align:center;text-transform:uppercase;color:#fff;text-shadow:1px 1px 0 rgba(0,0,0,.21);cursor:pointer}.btn:hover{background:#1eacc7}.btn_promo{width:259px;height:63px;font-size:18px;margin-top:115px}.choice{background:url(../img/choice/choice_bg2.jpg) center center/cover no-repeat;min-height:898px;padding:57px 0 137px}.choice__descr,.choice__text{font-size:17px;text-align:center}.choice__descr{font-weight:400;line-height:21px;color:#fff;margin-top:10px}.choice__img img{display:block;margin:40px auto 0}.choice__text{font-weight:300;line-height:24px;color:#222}.cities,footer{position:relative}.cities{height:717px;padding:47px 0 50px;background:url(../img/map_bg.jpg) center center/cover no-repeat}.cities__descr,.cities__link{font-weight:400;text-align:center}.cities__descr{font-size:17px;color:#fff;margin-top:8px}.cities__link{position:absolute;bottom:50px;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);font-size:15px;text-transform:uppercase;color:#1fbad6;text-decoration:none}.cities__link:hover{color:#fff}footer{min-height:158px;padding:12px 22px 40px}.footer__divider{width:301px;height:7px;background:#1fbad6;border-radius:4px;margin:0 auto}.footer__grid{display:grid;grid-template-columns:repeat(3,1fr);margin-top:32px}.footer__social{width:156px;display:flex;justify-content:space-between}.footer__social_round{width:32px;height:32px;background:#070716;border-radius:50%;position:relative}.footer__social_round img{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.footer__links{width:100%;margin:0 auto}.footer__links_blog,.footer__links_menu{display:flex;font-weight:300;text-transform:uppercase}.footer__links_menu{justify-content:space-around;font-size:15px;flex-direction:row;flex-wrap:wrap}.footer__links_menu a{color:#070716;text-decoration:none}.footer__links_blog{justify-content:space-between;font-size:11px;margin-top:14px}.footer__links_blog a{color:#999;text-decoration:none}.footer__links_lang{font-weight:400;font-size:11px;text-align:center;text-transform:uppercase;margin-top:16px}.footer__links_lang a{color:#1fbad6;text-decoration:none}.footer__promotion{justify-self:end}.footer__promotion a{margin-left:6px}.line{background:#070716;position:absolute;width:100%;height:10px;left:0;bottom:0}header,nav{position:relative;height:50px}nav{width:100%;background:#212121;position:fixed;z-index:100}nav .menu{display:flex;height:50px;justify-content:space-evenly;align-items:center}nav .menu__list{list-style:none}nav .menu__list_item{font-weight:300;font-size:15px;line-height:15px;color:#fff;text-decoration:none}nav .menu__list_item:hover{color:#1eacc7}nav .menu__list:not(:first-child)::before{content:"";width:2px;height:32px;border-left:2px solid #000;margin-right:36px}nav .hamburger{display:none;position:absolute;width:26px;height:15px;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);right:20px;z-index:250}nav .hamburger span{display:block;width:100%;height:2px;background:#fff;margin-bottom:3px;transition:all .5s}nav .hamburger__active span{margin-bottom:-3px}nav .hamburger__active span:nth-child(1){-webkit-transform:translateY(3px) rotate(-45deg);transform:translateY(3px) rotate(-45deg)}nav .hamburger__active span:nth-child(2){display:none}nav .hamburger__active span:nth-child(3){-webkit-transform:translateY(3px) rotate(45deg);transform:translateY(3px) rotate(45deg)}.subheader{height:87px;background:rgba(0,0,0,.6);position:relative;top:50px}.subheader__grid{max-width:950px;height:87px;margin:0 auto;display:grid;grid-template-columns:repeat(2,3fr) repeat(2,2fr);-webkit-column-gap:30px;-moz-column-gap:30px;column-gap:30px;align-content:center}.subheader__logo{max-width:285px}.subheader__logo_img{width:100%}.subheader__logo_descr{font-weight:100;font-size:13px;color:#fff}.subheader__phone{grid-column:3/4}.subheader__phone_call{font-weight:300;font-size:12px;line-height:14px;text-align:right;color:#fff}.subheader__phone_tell{display:block;font-weight:400;font-size:22px;text-align:right;color:#fff;text-decoration:none;margin-top:6px}.label,.subheader_button{margin:0 auto}.subheader .hidden{display:none}.label{width:115px;height:27px;background:#000;font-weight:400;font-size:11px;text-align:center;text-transform:uppercase;color:#fff;padding-top:7px}.label_white{background:#fff;color:#000}.mobile{background:url(../img/mobile/mobile_bg.png) center center/cover no-repeat;padding:48px 0 78px;min-height:864px}.mobile__descr{font-weight:400;font-size:17px;line-height:21px;text-align:center;color:#222;margin-top:8px}.mobile__grid{display:grid;grid-template-columns:repeat(3,1fr);gap:19px 67px;margin-top:30px}.mobile__blocks{width:100%;height:280px;position:relative}.mobile__blocks_1{background:url(../img/mobile/cart1.jpg) center center/cover no-repeat}.mobile__blocks_2{background:url(../img/mobile/cart2.jpg) center center/cover no-repeat}.mobile__blocks_3{background:url(../img/mobile/cart3.jpg) center center/cover no-repeat}.mobile__blocks_4{background:url(../img/mobile/cart4.jpg) center center/cover no-repeat}.mobile__blocks_5{background:url(../img/mobile/cart5.jpg) center center/cover no-repeat}.mobile__blocks_6{background:url(../img/mobile/cart6.jpg) center center/cover no-repeat}.mobile__blocks_title{font-weight:400;font-size:24px;line-height:31px;text-align:center;text-transform:uppercase;color:#fff;margin-top:82px}.mobile__blocks_plus{width:26px;height:26px;background:#000;border-radius:50%;bottom:35px;display:flex;justify-content:center;align-items:center;transition:all .3s;cursor:pointer}.mobile__blocks_plus::after,.mobile__blocks_plus::before{content:"";width:14px;height:2px;background:#1eacc7}.mobile__blocks_plus,.mobile__blocks_plus::before{position:absolute;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.mobile__blocks_plus::before{width:2px;height:14px}.mobile__blocks_plus:hover::after,.mobile__blocks_plus:hover::before{background:#ff5656}.promo{background:url(../img/uber_bg.jpg) center center/cover no-repeat;min-height:800px;padding:140px 0 186px}.promo__subtitle,.promo__title{font-weight:900;font-size:60px;text-align:center;text-transform:uppercase;color:#fff}.promo__subtitle{font-weight:700;font-size:36px;margin-top:10px}.promo__text{padding:0 78px;font-weight:400;font-size:18px;line-height:24px;text-align:center;color:#fff;margin-top:20px}.reason{padding:18px 0 62px;min-height:850px}.reason__grid{display:grid;grid-template-columns:repeat(2,1fr);gap:32px 70px;margin-top:28px}.reason__block{display:flex;min-height:150px;justify-content:space-between;align-items:center}.reason__block_round{min-width:116px;height:116px;background:#1eacc7;border-radius:50%;display:flex;justify-content:center;align-items:center;transition:all .5s}.reason__block_round:hover{-webkit-transform:scaleX(-1);transform:scaleX(-1)}.reason__block_descr{max-width:372px}.reason__block_descr .subtitle{font-weight:400;font-size:17px;line-height:21px;color:#1eacc7}.reason__block_descr .txt{font-weight:300;font-size:15px;line-height:21px;color:#202020}.require{min-height:920px;padding:66px 0 90px}.require__grid{display:grid;grid-template-columns:repeat(2,1fr);gap:60px 102px;margin-top:36px}.require__grid__block_title{font-weight:400;font-size:22px;color:#1ca8c3}.require__grid__block_list{list-style:none;padding-left:50px;margin-top:20px}.require__grid__block_list li{font-weight:300;font-size:17px;line-height:32px;color:#222;position:relative}.require__grid__block_list li::before{content:"";width:21px;height:21px;background:url(../img/markBlue.svg) center center/cover no-repeat;position:absolute;left:-31px;top:7px}.require__grid__block_descr{font-weight:300;font-size:17px;line-height:24px;color:#1ca8c3;margin-top:25px}.require .red .require__grid__block_title{color:#ff5656}.require .red .require__grid__block_list li::before{background:url(../../img/markRed.svg) center center/cover no-repeat}.title{font-weight:700;font-size:38px;text-align:center;text-transform:uppercase;color:#222;margin-top:36px}.title_white{color:#fff}@supports (-webkit-appearance:none){.choice{background-image:url(../img/choice/choice_bg2.webp) center center/cover no-repeat}.cities{background:url(../img/map_bg.webp) center center/cover no-repeat}.mobile{background-image:url(../img/mobile/mobile_bg.webp) center center/cover no-repeat}.mobile__blocks_1{background-image:url(../img/mobile/cart1.webp) center center/cover no-repeat}.mobile__blocks_2{background-image:url(../img/mobile/cart2.webp) center center/cover no-repeat}.mobile__blocks_3{background-image:url(../img/mobile/cart3.webp) center center/cover no-repeat}.mobile__blocks_4{background-image:url(../img/mobile/cart4.webp) center center/cover no-repeat}.mobile__blocks_5{background-image:url(../img/mobile/cart5.webp) center center/cover no-repeat}.mobile__blocks_6{background-image:url(../img/mobile/cart6.webp) center center/cover no-repeat}.promo{background-image:url(../img/uber_bg.webp) center center/cover no-repeat}.require__grid__block_list li::before{background:url(../img/markBlue.svg) center center/cover no-repeat}.require .red .require__grid__block_list li::before{background:url(../../img/markRed.svg) center center/cover no-repeat}}@media (max-width:1200px){.container{max-width:960px}.footer__grid{grid-template-columns:3fr 3fr 3fr}.footer__links_blog{justify-content:space-evenly;flex-wrap:wrap;line-height:20px}.footer__links_blog a{margin:0 5px}.footer__promotion{display:flex;justify-content:space-evenly}.promo__title{font-size:54px}.promo__text{padding:0 50px}.reason__grid{gap:32px 50px}.reason__block_descr{max-width:310px}}@media (max-width:992px){.container{max-width:720px}.footer__promotion{justify-self:end;display:flex;flex-direction:column}.footer__promotion a{margin-left:6px}nav .menu__list_item{font-size:13px}nav .menu__list:not(:first-child)::before{margin-right:8px}.subheader__grid{max-width:100%;grid-template-columns:3fr 1fr repeat(2,2fr)}.subheader__phone{grid-column:3/4}.subheader__phone_call{margin-top:4px}.subheader__phone_tell{font-size:20px;margin-top:4px}.subheader_button{margin:0 auto}.mobile__grid{gap:19px 40px}.mobile__blocks_title{font-size:20px}.promo{padding:160px 0 100px}.promo__title{font-size:50px}.promo__subtitle{font-size:30px}.promo__text{padding:0;margin-top:30px}.reason__block{flex-direction:column;justify-content:flex-start}.reason__block_descr{margin-top:20px;text-align:justify}.reason__block_descr .subtitle{text-align:center}.require__grid{display:grid;grid-template-columns:repeat(2,1fr);gap:60px 30px;margin-top:36px}.require__grid__block_list{padding-left:30px}.require__grid__block_list li::before{left:-30px}}@media (max-width:768px){.container{max-width:540px}.btn{width:100%;font-size:12px}.btn_promo{width:259px;height:63px;font-size:18px;margin-top:80px}.choice{min-height:700px;padding:57px 0 90px}.choice__descr{font-size:15px}.choice__img img{width:100%}.footer__grid{grid-template-columns:1fr 2fr 1fr}.footer__links{width:100%;margin:0 auto}.footer__links_blog,.footer__links_menu{justify-content:space-evenly}.footer__links_lang{font-weight:400;font-size:11px;text-align:center;text-transform:uppercase;margin-top:16px}.footer__links_lang a{color:#1fbad6;text-decoration:none}.footer__promotion{justify-self:end}.footer__promotion a{margin-left:6px}nav .menu{position:fixed;width:50%;height:100vh;top:0;left:-100%;flex-direction:column;align-items:center;padding:20px 15px;justify-content:center;background-color:rgba(0,0,0,.9);transition:all .5s}nav .menu_active{left:0}nav .menu__list{list-style-type:none}nav .menu__list_item{font-weight:300;font-size:18px;line-height:36px;margin-top:10px}nav .menu__list:not(:first-child)::before{content:"";width:2px;height:32px;border-left:none;margin-right:0}nav .hamburger{display:block}.subheader__grid{grid-template-columns:4fr 1fr repeat(2,3fr);-webkit-column-gap:15px;-moz-column-gap:15px;column-gap:15px}.subheader__logo_descr{font-size:10px}.subheader__phone{grid-column:3/4}.subheader__phone_call{font-size:11px;margin-top:5px}.subheader__phone_tell{font-size:18px}.mobile__grid{grid-template-columns:repeat(2,1fr);gap:22px 40px}.mobile__blocks_title{font-size:18px;line-height:26px}.promo{min-height:600px}.promo__title{font-size:38px}.promo__subtitle{font-weight:700;font-size:24px}.promo__text{font-weight:400;font-size:14px;line-height:20px;text-align:center;color:#fff;margin-top:20px}.reason__grid{grid-template-columns:1fr;gap:50px 0}.reason__block_descr{max-width:100%}.require__grid{grid-template-columns:1fr;gap:60px 0}.require__grid__block_list{padding-left:40px}.require__grid__block_list li::before{left:-35px}.title{font-size:28px}}@media (max-width:576px){.container{max-width:91%}.btn{width:110px;height:22px;font-size:10px}.btn:hover{background:linear-gradient(0deg,#1eacc7 0,#4ce2ff 100%)}.btn_promo{width:210px;height:50px;font-size:16px;margin-top:76px}.choice{min-height:394px;background-image:none;background-color:#070716;padding:25px 0 31px}.choice__descr,.choice_title{display:none}.choice__img{margin-top:34px}.choice__text{font-weight:300;font-size:17px;line-height:24px;text-align:center;color:#fff;margin-top:23px}.cities{height:360px;padding:24px 0 30px}.cities__descr{font-size:14px;margin-top:11px}.cities__link{width:100%;bottom:30px}footer{min-height:256px;padding:24px 17px 30px}.footer__divider{width:255px;height:6px}.footer__grid{display:grid;grid-template-columns:1fr;grid-template-rows:80px 35px 24px;margin-top:21px}.footer__social{grid-row-start:2;width:100%;justify-content:center}.footer__promotion a,.footer__social_round{margin:0 3px}.footer__links{grid-row-start:1}.footer__links_menu{justify-content:space-between;font-size:14px;line-height:11px}.footer__links_blog{justify-content:space-evenly;margin-top:8px;line-height:18px}.footer__links_lang{font-size:11px;line-height:11px;margin-top:2px}.footer__promotion{grid-row-start:3;flex-direction:row;margin-top:19px;justify-content:space-evenly;justify-self:center}.footer__promotion a img{width:82px}header,nav{height:32px}nav .menu{width:80%}nav .menu_active{left:0}nav .menu__list{width:100%;text-align:center;padding:5px 0}nav .menu__list_item{font-size:16px;display:block}.subheader{height:60px;top:32px;padding:10px 0}.subheader__grid{grid-template-columns:repeat(2,1fr);-webkit-column-gap:44px;-moz-column-gap:44px;column-gap:44px;height:38px}.subheader__logo{max-width:130px;margin-top:12px}.subheader__logo_img{width:100%}.subheader__logo_descr{display:none}.subheader__phone{grid-column:2;display:none}.subheader__phone_tell{font-size:12px;text-align:center;margin-bottom:6px}.subheader .hidden{display:block}.label{width:112px;height:24px}.mobile{padding:25px 0 43px;min-height:1890px}.mobile__descr{font-size:14px;margin-top:10px}.mobile__grid{display:grid;grid-template-columns:290px;justify-content:center;row-gap:30px;margin-top:27px}.mobile__blocks_title{font-size:18px;margin-top:80px}.mobile__blocks_plus{bottom:21px}.promo{min-height:400px;padding:102px 0 35px}.promo__title{font-size:30px;line-height:35px;padding:0 13px}.promo__subtitle{font-size:20px;line-height:23px;margin-top:16px}.promo__text{display:none}.reason{padding:22px 0 38px;min-height:246px}.reason__grid{gap:23px 0;margin-top:24px}.reason__block_round{min-width:100px;height:100px}.reason__block_descr{padding:0 15px}.reason__block_descr .subtitle{font-size:16px;text-align:left}.reason__block_descr .txt{text-align:left;margin-top:3px}.require{min-height:960px;padding:22px 0 30px}.require__grid{grid-template-columns:1fr;gap:30px;margin-top:30px}.require__grid__block_title{font-size:16px}.require__grid__block_list{padding-left:31px;margin-top:10px}.require__grid__block_list li{font-size:14px;line-height:24px}.require__grid__block_list li::before{left:-31px;top:2px}.require__grid__block_descr{font-size:14px;line-height:16px;margin-top:20px}.title{font-size:16px;margin-top:16px}.title_mini{font-size:15px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */